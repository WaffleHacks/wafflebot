"""Remove ticketing

Revision ID: 9ccd11db28bd
Revises: 9046587a9e7e
Create Date: 2021-08-10 07:26:54.617460+00:00

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "9ccd11db28bd"
down_revision = "9046587a9e7e"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_reactions_id", table_name="reactions")
    op.drop_table("reactions")
    op.drop_index("ix_messages_id", table_name="messages")
    op.drop_table("messages")
    op.drop_index("ix_tickets_channel_id", table_name="tickets")
    op.drop_index("ix_tickets_id", table_name="tickets")
    op.drop_table("tickets")
    op.drop_index("ix_categories_id", table_name="categories")
    op.drop_table("categories")
    op.drop_index("ix_panels_id", table_name="panels")
    op.drop_index("ix_panels_message_id", table_name="panels")
    op.drop_table("panels")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "panels",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('panels_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("message_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "title",
            sa.VARCHAR(length=256),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("content", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("channel_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="panels_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_index("ix_panels_message_id", "panels", ["message_id"], unique=False)
    op.create_index("ix_panels_id", "panels", ["id"], unique=False)
    op.create_table(
        "reactions",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("emoji", sa.VARCHAR(length=64), autoincrement=False, nullable=False),
        sa.Column("category_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("panel_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["categories.id"],
            name="reactions_category_id_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["panel_id"],
            ["panels.id"],
            name="reactions_panel_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="reactions_pkey"),
    )
    op.create_index("ix_reactions_id", "reactions", ["id"], unique=False)
    op.create_table(
        "tickets",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('tickets_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("category_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("creator_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("is_open", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "reason",
            sa.VARCHAR(length=256),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("channel_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["categories.id"],
            name="tickets_category_id_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["creator_id"],
            ["users.id"],
            name="tickets_creator_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="tickets_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_index("ix_tickets_id", "tickets", ["id"], unique=False)
    op.create_index("ix_tickets_channel_id", "tickets", ["channel_id"], unique=False)
    op.create_table(
        "messages",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("ticket_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("sender_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("content", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["sender_id"],
            ["users.id"],
            name="messages_sender_id_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["ticket_id"],
            ["tickets.id"],
            name="messages_ticket_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="messages_pkey"),
    )
    op.create_index("ix_messages_id", "messages", ["id"], unique=False)
    op.create_table(
        "categories",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(length=64), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="categories_pkey"),
    )
    op.create_index("ix_categories_id", "categories", ["id"], unique=False)
    # ### end Alembic commands ###
